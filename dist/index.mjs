var e=class extends Error{constructor(t){super(t),this.name="FetchClientError"}};function a(s){let t,r;do t=s.next(),t.done||(r=t.value);while(!t.done);return r!=null?r:null}async function p(){let s=await fetch("https://soundcloud.com/");if(s.status>=400)throw new e(`Initial request failed: ${s.status} ${s.statusText}`);let r=(await s.text()).matchAll(/<script\s+crossorigin\s+src=["'](https?:\/\/[^"']+)["']><\/script>/gi),o=a(r);if(!o)throw new e("Failed to parse script URL");let i=await fetch(o[1]);if(i.status>=400)throw new e(`Script request failed: ${i.status} ${i.statusText}`);let n=(await i.text()).match(/\bclient_id:\s*["']([^"']+)["']/i);if(!n)throw new e("Failed to parse client ID from script");return n[1]}async function f(s){let t=await fetch(`https://api-v2.soundcloud.com/resolve?client_id=${s}`,{method:"HEAD"});return t.status===200||t.status===404}export{p as fetchClientID,f as testClientID};
//# sourceMappingURL=index.mjs.map