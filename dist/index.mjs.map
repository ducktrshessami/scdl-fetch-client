{"version":3,"sources":["../src/error.ts","../src/fetch.ts","../src/test.ts"],"sourcesContent":["export class ClientFetchError extends Error {\n    constructor(message: string) {\n        super(message);\n        this.name = \"FetchClientError\";\n    }\n}\n","import { ClientFetchError } from \"./error\";\n\nfunction iteratorLast<T>(it: IterableIterator<T>): T | null {\n    let item: IteratorResult<T>;\n    let last: T;\n    do {\n        item = it.next();\n        if (!item.done) {\n            last = item.value;\n        }\n    } while (!item.done);\n    return last! ?? null;\n}\n\nexport async function fetchClientID(): Promise<string> {\n    const initial = await fetch(\"https://soundcloud.com/\");\n    if (initial.status >= 400) {\n        throw new ClientFetchError(`Initial request failed: ${initial.status} ${initial.statusText}`);\n    }\n    const initialBody = await initial.text();\n    const results = initialBody.matchAll(/<script\\s+crossorigin\\s+src=[\"'](https?:\\/\\/[^\"']+)[\"']><\\/script>/gi);\n    const lastUrl = iteratorLast(results);\n    if (!lastUrl) {\n        throw new ClientFetchError(\"Failed to parse script URL\");\n    }\n    const script = await fetch(lastUrl[1]);\n    if (script.status >= 400) {\n        throw new ClientFetchError(`Script request failed: ${script.status} ${script.statusText}`);\n    }\n    const scriptBody = await script.text();\n    const result = scriptBody.match(/\\bclient_id:\\s*[\"']([^\"']+)[\"']/i);\n    if (!result) {\n        throw new ClientFetchError(`Failed to parse client ID from script`);\n    }\n    return result[1];\n}\n","export async function testClientID(clientID: string): Promise<boolean> {\n    const { status } = await fetch(`https://api-v2.soundcloud.com/?client_id=${clientID}`, { method: \"HEAD\" });\n    return status === 404;\n}\n"],"mappings":"AAAO,IAAMA,EAAN,cAA+B,KAAM,CACxC,YAAYC,EAAiB,CACzB,MAAMA,CAAO,EACb,KAAK,KAAO,kBAChB,CACJ,ECHA,SAASC,EAAgBC,EAAmC,CACxD,IAAIC,EACAC,EACJ,GACID,EAAOD,EAAG,KAAK,EACVC,EAAK,OACNC,EAAOD,EAAK,aAEX,CAACA,EAAK,MACf,OAAOC,GAAA,KAAAA,EAAS,IACpB,CAEA,eAAsBC,GAAiC,CACnD,IAAMC,EAAU,MAAM,MAAM,yBAAyB,EACrD,GAAIA,EAAQ,QAAU,IAClB,MAAM,IAAIC,EAAiB,2BAA2BD,EAAQ,MAAM,IAAIA,EAAQ,UAAU,EAAE,EAGhG,IAAME,GADc,MAAMF,EAAQ,KAAK,GACX,SAAS,sEAAsE,EACrGG,EAAUR,EAAaO,CAAO,EACpC,GAAI,CAACC,EACD,MAAM,IAAIF,EAAiB,4BAA4B,EAE3D,IAAMG,EAAS,MAAM,MAAMD,EAAQ,CAAC,CAAC,EACrC,GAAIC,EAAO,QAAU,IACjB,MAAM,IAAIH,EAAiB,0BAA0BG,EAAO,MAAM,IAAIA,EAAO,UAAU,EAAE,EAG7F,IAAMC,GADa,MAAMD,EAAO,KAAK,GACX,MAAM,kCAAkC,EAClE,GAAI,CAACC,EACD,MAAM,IAAIJ,EAAiB,uCAAuC,EAEtE,OAAOI,EAAO,CAAC,CACnB,CCnCA,eAAsBC,EAAaC,EAAoC,CACnE,GAAM,CAAE,OAAAC,CAAO,EAAI,MAAM,MAAM,4CAA4CD,CAAQ,GAAI,CAAE,OAAQ,MAAO,CAAC,EACzG,OAAOC,IAAW,GACtB","names":["ClientFetchError","message","iteratorLast","it","item","last","fetchClientID","initial","ClientFetchError","results","lastUrl","script","result","testClientID","clientID","status"]}